# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Query_pb2 as Query__pb2
import Response_pb2 as Response__pb2
import TransactionResponse_pb2 as TransactionResponse__pb2
import Transaction_pb2 as Transaction__pb2


class SmartContractServiceStub(object):
    """
    Transactions and queries for the file service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createContract = channel.unary_unary(
                '/proto.SmartContractService/createContract',
                request_serializer=Transaction__pb2.Transaction.SerializeToString,
                response_deserializer=TransactionResponse__pb2.TransactionResponse.FromString,
                )
        self.updateContract = channel.unary_unary(
                '/proto.SmartContractService/updateContract',
                request_serializer=Transaction__pb2.Transaction.SerializeToString,
                response_deserializer=TransactionResponse__pb2.TransactionResponse.FromString,
                )
        self.contractCallMethod = channel.unary_unary(
                '/proto.SmartContractService/contractCallMethod',
                request_serializer=Transaction__pb2.Transaction.SerializeToString,
                response_deserializer=TransactionResponse__pb2.TransactionResponse.FromString,
                )
        self.getContractInfo = channel.unary_unary(
                '/proto.SmartContractService/getContractInfo',
                request_serializer=Query__pb2.Query.SerializeToString,
                response_deserializer=Response__pb2.Response.FromString,
                )
        self.contractCallLocalMethod = channel.unary_unary(
                '/proto.SmartContractService/contractCallLocalMethod',
                request_serializer=Query__pb2.Query.SerializeToString,
                response_deserializer=Response__pb2.Response.FromString,
                )
        self.ContractGetBytecode = channel.unary_unary(
                '/proto.SmartContractService/ContractGetBytecode',
                request_serializer=Query__pb2.Query.SerializeToString,
                response_deserializer=Response__pb2.Response.FromString,
                )
        self.getBySolidityID = channel.unary_unary(
                '/proto.SmartContractService/getBySolidityID',
                request_serializer=Query__pb2.Query.SerializeToString,
                response_deserializer=Response__pb2.Response.FromString,
                )
        self.getTxRecordByContractID = channel.unary_unary(
                '/proto.SmartContractService/getTxRecordByContractID',
                request_serializer=Query__pb2.Query.SerializeToString,
                response_deserializer=Response__pb2.Response.FromString,
                )
        self.deleteContract = channel.unary_unary(
                '/proto.SmartContractService/deleteContract',
                request_serializer=Transaction__pb2.Transaction.SerializeToString,
                response_deserializer=TransactionResponse__pb2.TransactionResponse.FromString,
                )
        self.systemDelete = channel.unary_unary(
                '/proto.SmartContractService/systemDelete',
                request_serializer=Transaction__pb2.Transaction.SerializeToString,
                response_deserializer=TransactionResponse__pb2.TransactionResponse.FromString,
                )
        self.systemUndelete = channel.unary_unary(
                '/proto.SmartContractService/systemUndelete',
                request_serializer=Transaction__pb2.Transaction.SerializeToString,
                response_deserializer=TransactionResponse__pb2.TransactionResponse.FromString,
                )


class SmartContractServiceServicer(object):
    """
    Transactions and queries for the file service.
    """

    def createContract(self, request, context):
        """Creates a contract
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateContract(self, request, context):
        """Updates a contract with the content
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def contractCallMethod(self, request, context):
        """Calls a contract
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getContractInfo(self, request, context):
        """Retrieves the contract information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def contractCallLocalMethod(self, request, context):
        """Calls a smart contract to be run on a single node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ContractGetBytecode(self, request, context):
        """Retrieves the byte code of a contract
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getBySolidityID(self, request, context):
        """Retrieves a contract by its Solidity address
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTxRecordByContractID(self, request, context):
        """Retrieves the 25-hour records stored for a contract
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteContract(self, request, context):
        """Deletes a contract instance and transfers any remaining hbars to a specified receiver
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def systemDelete(self, request, context):
        """Deletes a contract if the submitting account has network admin privileges
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def systemUndelete(self, request, context):
        """Undeletes a contract if the submitting account has network admin privileges
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SmartContractServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createContract': grpc.unary_unary_rpc_method_handler(
                    servicer.createContract,
                    request_deserializer=Transaction__pb2.Transaction.FromString,
                    response_serializer=TransactionResponse__pb2.TransactionResponse.SerializeToString,
            ),
            'updateContract': grpc.unary_unary_rpc_method_handler(
                    servicer.updateContract,
                    request_deserializer=Transaction__pb2.Transaction.FromString,
                    response_serializer=TransactionResponse__pb2.TransactionResponse.SerializeToString,
            ),
            'contractCallMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.contractCallMethod,
                    request_deserializer=Transaction__pb2.Transaction.FromString,
                    response_serializer=TransactionResponse__pb2.TransactionResponse.SerializeToString,
            ),
            'getContractInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.getContractInfo,
                    request_deserializer=Query__pb2.Query.FromString,
                    response_serializer=Response__pb2.Response.SerializeToString,
            ),
            'contractCallLocalMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.contractCallLocalMethod,
                    request_deserializer=Query__pb2.Query.FromString,
                    response_serializer=Response__pb2.Response.SerializeToString,
            ),
            'ContractGetBytecode': grpc.unary_unary_rpc_method_handler(
                    servicer.ContractGetBytecode,
                    request_deserializer=Query__pb2.Query.FromString,
                    response_serializer=Response__pb2.Response.SerializeToString,
            ),
            'getBySolidityID': grpc.unary_unary_rpc_method_handler(
                    servicer.getBySolidityID,
                    request_deserializer=Query__pb2.Query.FromString,
                    response_serializer=Response__pb2.Response.SerializeToString,
            ),
            'getTxRecordByContractID': grpc.unary_unary_rpc_method_handler(
                    servicer.getTxRecordByContractID,
                    request_deserializer=Query__pb2.Query.FromString,
                    response_serializer=Response__pb2.Response.SerializeToString,
            ),
            'deleteContract': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteContract,
                    request_deserializer=Transaction__pb2.Transaction.FromString,
                    response_serializer=TransactionResponse__pb2.TransactionResponse.SerializeToString,
            ),
            'systemDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.systemDelete,
                    request_deserializer=Transaction__pb2.Transaction.FromString,
                    response_serializer=TransactionResponse__pb2.TransactionResponse.SerializeToString,
            ),
            'systemUndelete': grpc.unary_unary_rpc_method_handler(
                    servicer.systemUndelete,
                    request_deserializer=Transaction__pb2.Transaction.FromString,
                    response_serializer=TransactionResponse__pb2.TransactionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.SmartContractService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SmartContractService(object):
    """
    Transactions and queries for the file service.
    """

    @staticmethod
    def createContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/createContract',
            Transaction__pb2.Transaction.SerializeToString,
            TransactionResponse__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/updateContract',
            Transaction__pb2.Transaction.SerializeToString,
            TransactionResponse__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def contractCallMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/contractCallMethod',
            Transaction__pb2.Transaction.SerializeToString,
            TransactionResponse__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getContractInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/getContractInfo',
            Query__pb2.Query.SerializeToString,
            Response__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def contractCallLocalMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/contractCallLocalMethod',
            Query__pb2.Query.SerializeToString,
            Response__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ContractGetBytecode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/ContractGetBytecode',
            Query__pb2.Query.SerializeToString,
            Response__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getBySolidityID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/getBySolidityID',
            Query__pb2.Query.SerializeToString,
            Response__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getTxRecordByContractID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/getTxRecordByContractID',
            Query__pb2.Query.SerializeToString,
            Response__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/deleteContract',
            Transaction__pb2.Transaction.SerializeToString,
            TransactionResponse__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def systemDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/systemDelete',
            Transaction__pb2.Transaction.SerializeToString,
            TransactionResponse__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def systemUndelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.SmartContractService/systemUndelete',
            Transaction__pb2.Transaction.SerializeToString,
            TransactionResponse__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
