syntax = "proto3";

package com.gradido.proto;

import "BasicTypes.proto";
import "Timestamp.proto";

message Participant {
    uint64 user_id = 1;
}

message RemoteParticipant {
    uint64 user_id = 1;
    uint64 group_id = 2;
}

message LocalTransfer {
    Participant user_from = 1;
    Participant user_to = 2;
}
message InboundTransfer {
    RemoteParticipant user_from = 1;
    Participant user_to = 2;
    // this matches related OutboundTransfer.paired_transaction_id
    .proto.Timestamp paired_transaction_id = 3;
}
message OutboundTransfer {
    Participant user_from = 1;
    RemoteParticipant user_to = 2;
    // this matches related InboundTransfer.paired_transaction_id
    .proto.Timestamp paired_transaction_id = 3;
}

message GradidoTransaction {
    enum GradidoTransferType {
        LOCAL = 0;
        INBOUND = 1;
        OUTBOUND = 2;
    }

    GradidoTransferType gradido_transfer_type = 1;

    oneof data {
        LocalTransfer local = 2;
        InboundTransfer inbound = 3;
        OutboundTransfer outbound = 4;
    }
    
    uint64 amount = 5;
    uint64 amount_with_deduction = 6;

    // bytes[64]
    bytes sender_signature = 7;
}

message GroupUpdate {
    bool is_disabled = 1;
    uint64 update_author_user_id = 2;

    // update_author_signature[64]
    bytes update_author_signature = 3;
}

message GroupFriendsUpdate {
    bool is_disabled = 1;
    uint64 update_author_user_id = 2;

    // update_author_signature[64]
    bytes update_author_signature = 3;
    uint64 group_id = 4;
}

message GroupMemberUpdate {
    bool is_disabled = 1;
    uint64 update_author_user_id = 2;

    // update_author_signature[64]
    bytes update_author_signature = 3;

    uint64 user_id = 4;
    enum MemberStatus {
        OWNER=0;
        MEMBER=1;
    };
    MemberStatus member_status = 5;

    enum MemberUpdateType {
        ADD_USER=0;
        UPDATE_USER=1;
        MOVE_USER_INBOUND=2;
        MOVE_USER_OUTBOUND=3;
        DISABLE_USER=4;
    };
    MemberUpdateType member_update_type = 6;

    // this only makes sense for user move, TODO: probably restructure
    .proto.Timestamp paired_transaction_id = 7;
    uint64 target_group = 8;
    
    // public_key[32]
    bytes public_key = 9;
}

// this is sent inside ConsensusTopicResponse.message
message Transaction {
    enum TransactionType {
        GRADIDO_TRANSACTION = 0;
        GROUP_UPDATE = 1;
        GROUP_FRIENDS_UPDATE = 2;
        GROUP_MEMBER_UPDATE = 3;
    }
    TransactionType transaction_type = 1;

    oneof data {
        GradidoTransaction gradido_transaction = 2;
        GroupUpdate group_update = 3;
        GroupFriendsUpdate group_friends_update = 4;
        GroupMemberUpdate group_member_update = 5;
    }

    uint64 version_number = 6;
    
    // bytes[32]
    bytes reserved = 7;
}

message ManageGroupRequest {
    enum Action {
         ADD_GROUP = 0;
         REMOVE_GROUP = 1;
    }
    Action action = 1;
    // this is the only needed field for REMOVE_GOUP
    uint64 group_id = 2;
    bytes alias = 3;
    .proto.TopicID topic_id = 4;
}

message ManageGroupResponse {
    bool success = 1;    
}

message BlockRangeDescriptor {
    uint64 group_id = 1;
    uint64 first_record = 2;        
    uint64 record_count = 3;
}

message BlockRecord {
    bool success = 1;
    // 64 bytes
    bytes hash = 2;
    Transaction transaction = 3;
}

message ManageNodeNetwork {
    enum Action {
         ADD_NODE = 0;
         REMOVE_NODE = 1;
    }
    Action action = 1;
    bytes endpoint = 2;
}

message ManageNodeNetworkResponse {
    bool success = 1;
}

service BlockService {
    rpc subscribe_to_blocks (BlockRangeDescriptor) returns (stream BlockRecord);
}

service GradidoNode {
    rpc manage_group (ManageGroupRequest) returns (ManageGroupResponse);
}

service NodeService {
    rpc manage_node_network (ManageNodeNetwork) returns (ManageNodeNetworkResponse);
}